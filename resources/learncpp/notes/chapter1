Types of Statements:

1. Declaration
2. Jump
3. Expression
4. Compound
5. Selection
6. Iteration
7. Try blocks


***
Every cpp program must have a function called main. When the program is run, 
execution starts with the first statement inside of function main and then conti
nues sequentially.
***


///
    Best Practices:
///
    Be sure to comment code liberally. More the information the better. 
    Especially when computing things using in line constants.
///
    When init variables, try to directly list init them.
    eg)

    int a{3};

    This saves on memory and run time.

    Additionally, by using direct list init, cpp will throw errors bc of type 
    checking
    basically, it won't round values if you use list init. 

    eg)
        int x2 = val    //if val == 7.9, x2 becomes 7.
///


***
    Certain datatypes have constraints on the value that they can hold. eg) int 
    has a limit and going over that will cause an overflow.
***


--------------------------------------------------------------------------------
KeyWords for Cpp
--------------------------------------------------------------------------------
alignas
alignof
and
and_eq
asm
auto
bitand
bitor
bool
break
case
catch
char
char8_t (since C++20)
char16_t
char32_t
class
compl
concept (since C++20)
const
consteval (since C++20)
constexpr
constinit (since C++20)
const_cast
continue
co_await (since C++20)
co_return (since C++20)
co_yield (since C++20)
decltype
default
delete
do
double
dynamic_cast
else
enum
explicit
export
extern
false
float
for
friend
goto
if                      if statement starts
inline
int                     inits an integer.
long
mutable
namespace
new
noexcept
not
not_eq
nullptr
operator
or
or_eq
private
protected
public
register
reinterpret_cast
requires (since C++20)
return
short
signed
sizeof
static
static_assert
static_cast
struct
switch
template
this
thread_local
throw
true
try
typedef
typeid
typename
union
unsigned
using
virtual
void
volatile
wchar_t
while
xor
xor_eq

--------------------------------------------------------------------------------
NAMING CONVENTION TIPS
--------------------------------------------------------------------------------
Name of... 
    - variable
    - function
    - type
    - other kind of item.

all called identifiers.

Cpp is case sensitive so 
    nValue != NVALUE

You can begin variables/function with _


--------------------------------------------------------------------------------
CONVENTIONS:
--------------------------------------------------------------------------------
variables should always be lowercase

    int value;


either separate words by underscores or camelcase.

    int myVariableName;
    int myFunctionName();

    or 

    int my_variable_name;
    int my_function_name();

--------------------------------------------------------------------------------
1.9:    Introduction to Literals and Operators
--------------------------------------------------------------------------------
Literals:
    short for Literal Constant.
    Has a fixed value that has been inserted directly into the source code.

Operators:
    Math Operations.

        +   Addition 
        -   Subtraction 
        *   Multiplication 
        /   Division
        =   Assignment
        ==  Equality 
        <<  Insertion
        >>  Extraction

--------------------------------------------------------------------------------
1.10:   Intro To Expressions
--------------------------------------------------------------------------------

Expressions are statements that can be evaluated to produce a single result.

examples in first.cpp

***
    Key Insight:

    Values calculated in an expression are discarded at the end of the 
    expression 
***


